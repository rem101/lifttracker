"""init

Revision ID: be98b865fc14
Revises: 
Create Date: 2022-01-19 06:24:26.787838

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.

revision = 'be98b865fc14'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercide_set_instance',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('exercise_id', sa.Integer(), nullable=True),
                    sa.Column('reps_achieved', sa.Integer(), nullable=True),
                    sa.Column('set', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('exercise',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=254), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workout',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=254), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workout_instance',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('workout_plan_id', sa.Integer(), nullable=True),
                    sa.Column('date', sa.Date(), nullable=True),
                    sa.Column('exercise_set_instance_Id', sa.Integer(), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workout_schedule_type',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=254), nullable=True),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('exercise_reps_set',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('exercise_id', sa.Integer(), nullable=True),
                    sa.Column('rep_count', sa.Integer(), nullable=True),
                    sa.Column('set_count', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workout_schedule',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('workout_id', sa.Integer(), nullable=True),
                    sa.Column('start_day', sa.Integer(), nullable=True),
                    sa.Column('workout_schedule_type_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['workout_id'], ['workout.id'], ),
                    sa.ForeignKeyConstraint(['workout_schedule_type_id'], ['workout_schedule_type.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('workout_plan',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=254), nullable=True),
                    sa.Column('rest_min', sa.Integer(), nullable=True),
                    sa.Column('rest_max', sa.Integer(), nullable=True),
                    sa.Column('weight_increment', sa.Boolean(), nullable=True),
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.Column('workout_schedule_id', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['workout_schedule_id'], ['workout_schedule.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    op.create_table('exercise_reps_set_workout_plan',
                    sa.Column('workout_plan_id', sa.Integer(), nullable=False),
                    sa.Column('exercise_reps_set_id', sa.Integer(), nullable=False),
                    sa.Column('order', sa.Integer(), nullable=True),
                    sa.ForeignKeyConstraint(['exercise_reps_set_id'], ['exercise_reps_set.id'], ),
                    sa.ForeignKeyConstraint(['workout_plan_id'], ['workout_plan.id'], ),
                    sa.PrimaryKeyConstraint('workout_plan_id', 'exercise_reps_set_id')
                    )

    workout_table = sa.table('workout',
                             sa.Column('id', sa.Integer),
                             sa.Column('name', sa.String)
                             )

    op.bulk_insert(workout_table,
                   [
                       {'id': 1, 'name': '5x5 Program'},
                   ]
                   )

    workout_schedule_type_table = sa.table('workout_schedule_type',
                                           sa.Column('id', sa.Integer),
                                           sa.Column('name', sa.String)
                                           )

    op.bulk_insert(workout_schedule_type_table,
                   [
                       {'id': 1, 'name': 'Every Day'},
                       {'id': 2, 'name': 'Every Other Day'},
                       {'id': 3, 'name': '1x Week'},
                       {'id': 4, 'name': '2x Week'},
                       {'id': 5, 'name': '3x Week'},
                   ]
                   )

    exercise_table = sa.table('exercise',
                              sa.Column('id', sa.Integer),
                              sa.Column('name', sa.String)
                              )

    op.bulk_insert(exercise_table,
                   [
                       {'id': 1, 'name': 'Squats'},
                       {'id': 2, 'name': 'Bench Press'},
                       {'id': 3, 'name': 'Shoulder Press'},
                       {'id': 4, 'name': 'Rows'},
                       {'id': 5, 'name': 'Deadlift'},
                   ]
                   )
    exercise_reps_set_table = sa.table('exercise_reps_set',
                                       sa.Column('id', sa.Integer),
                                       sa.Column('exercise_id', sa.Integer),
                                       sa.Column('rep_count', sa.Integer),
                                       sa.Column('set_count', sa.Integer)
                                       )

    op.bulk_insert(exercise_reps_set_table,
                   [
                       {'id': 1, 'exercise_id': 1, 'rep_count': 5, 'set_count': 5},
                       {'id': 2, 'exercise_id': 2, 'rep_count': 5, 'set_count': 5},
                       {'id': 3, 'exercise_id': 3, 'rep_count': 5, 'set_count': 5},
                       {'id': 4, 'exercise_id': 4, 'rep_count': 5, 'set_count': 5},
                       {'id': 5, 'exercise_id': 5, 'rep_count': 5, 'set_count': 5},
                   ])
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('exercise_reps_set_workout_plan')
    op.drop_table('workout_plan')
    op.drop_table('workout_schedule')
    op.drop_table('exercise_reps_set')
    op.drop_table('workout_schedule_type')
    op.drop_table('workout_instance')
    op.drop_table('workout')
    op.drop_table('exercise')
    op.drop_table('exercide_set_instance')
    # ### end Alembic commands ###
